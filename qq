* [33m27ff3d3[m[33m ([m[1;32mt1206[m[33m)[m t1206
* [33m7f8a780[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31mgithub/master[m[33m)[m Fine tune ToA mapper over module
* [33mffd06ad[m ToA mapper is almost done (not tested).
* [33m1876b06[m ToA mapper on Array succeeds (not tested)
* [33m7eea490[m WIP
* [33m6a4e65a[m WIP
* [33md2468b4[m safe
* [33m1da81a4[m safe, start: SE_Module_SDistr_a_dbc_1_ToA_mapper
* [33m4701a4a[m WIP
* [33m7a0e5a5[m 道阻且长
* [33m4e3f3f6[m WIP
* [33m1227e1b[m WIP
* [33mb1c6ed5[m WIP
* [33mcc64ccf[m WIP
* [33ma30c82d[m safe
* [33m8e413e5[m ToA mapper will be done soon
* [33m7788458[m Improvement by dabc_eq
* [33mada51fd[m upgraded dabc_equation
* [33m811939e[m WIP
* [33mb4cc969[m safe
* [33m4d2f0ab[m Template instantiation simplifies the result by LPR-extracted facts
* [33mfdd89a2[m safe
* [33m7355405[m Looks good
* [33m52681e5[m WIP
* [33m7a87b1c[m Almost done
* [33md9d14a8[m looks good
* [33mbb0d0dd[m WIP
* [33m8cac4b8[m Though looks formidable, transformation mappers shall be easy to use
* [33md5ed983[m PLAN: give up tuple-opr-sequence, and use case_prod instead
* [33me5881b3[m WIP
* [33ma2a7367[m WIP
* [33m27b03c7[m WIP
* [33m2753394[m Transformation mappers for semimodules
* [33me550c18[m WIP
* [33mb80013c[m WIP
* [33m1de67ce[m WIP
* [33m9547ab5[m WIP
* [33m9175796[m Notes
* [33mf0f2648[m WIP
* [33m5c432b3[m WIP
* [33mac48c87[m Rename: SDistr_Homo⇩U -> SDistr_Homo⇩S
* [33medfcd8c[m WIP
* [33m31fe517[m Norm of tuple operations looks good
* [33mb9db6fb[m WIP
* [33me14ffe5[m Notes
* [33mf7a181a[m Notes on Abstract
* [33mdb6f468[m WIP
* [33m3dc0220[m Tyopr_Comm_E now uses the general swapping normalization
* [33mf7b08ee[m WIP: replace has_bubbling by swapping normalization
* [33m27bc931[m Fix Bugs
* [33m1e773b2[m WIP
* [33m29c7537[m WIP
* [33m782e440[m WIP
* [33mace7276[m WIP
* [33mb777e31[m safe
* [33mf14ae04[m WIP
* [33m8982e9c[m WIP
* [33m3652ede[m The number of module SE rulkes reduces to 8 from 16
* [33mf43aeb6[m Comm and Non-Comm semimodule SE rules are merged
* [33mc4a3579[m WIP
* [33m9908816[m ToA mapper over Semimodule-zip/unzip
* [33m9055d1e[m notes
* [33m9b71a52[m WIP
* [33m181413a[m WIP
* [33m944dfaf[m Success
* [33m5ae2a59[m Notes on why the mappings have to be independent
* [33m0a91c43[m Bi-direction Frame Variables
* [33m62cf9a1[m WIP
* [33mffe38b3[m WIP
[31m|[m * [33mb1f6909[m[33m ([m[1;31mgithub/failure_1105[m[33m, [m[1;32mfailure_1105[m[33m)[m failure_1105
[31m|[m[31m/[m  
* [33mb102c4a[m failure
* [33m1659a5d[m BUG FIX: the remaining clause in the onward ToA and the demanding clause in the backward ToA must be different in order to be meaningful
* [33m80f3ca0[m The framework of Transformation Mapper is going to be done
* [33mc66ab53[m Brain burner
* [33mbdc786b[m WIP
* [33m1480d28[m Unified the reamining clause of the forward ToA and the demanding clause of the backward
* [33mdf72dfe[m WIP: Transformation Mapper - Different R
[32m|[m * [33m0552044[m[33m ([m[1;31mgithub/Identity_Elements⇩E_with_fixed_element[m[33m, [m[1;32mIdentity_Elements⇩E_with_fixed_element[m[33m)[m Yet another bad attemption
[32m|[m[32m/[m  
* [33m586af56[m safe
* [33m492ac04[m Let Separation_Homo⇩I_CondI go
[33m|[m * [33m5f7d44d[m[33m ([m[1;31mgithub/Separation_Homo⇩Λ⇩I_Cond[m[33m, [m[1;32mSeparation_Homo⇩Λ⇩I_Cond[m[33m)[m Give up
[33m|[m[33m/[m  
* [33m9818821[m safe
* [33m6a45fb1[m WIP
* [33m39a62a2[m Semimodule_One Wrapper for φMul_Quant_LenIv
* [33m14ad3b9[m Wrapper of Semimodule_One for φMul_Quant⇩Λ
* [33m84df94c[m Fix
* [33m1b1aa23[m Syntax of φMul_Quant⇩Λ
* [33me1c1cfd[m Mem_Slice now uses the updated Mem_Slice
* [33m7a92ac4[m Fixed NToA normalization
* [33m1667daa[m safe
* [33me0fbaad[m φMul_Quant_LenIv now supports parameterization
* [33me321fe1[m fixed deriver for Object_Equiv
* [33m69a3382[m All derivations of φMul_Quant⇩Λ are done.
* [33m7ca886a[m Semimodule_SDistr of φMul_Quant⇩Λ is done
* [33mcf12013[m Semimodule_One of ✱⇧φ⇩Λ is derived
* [33m97788b2[m Semidoule_SDistr is generalized
* [33md728b15[m Generalized Semimodule_One
* [33m98280ce[m safe
* [33m63ff782[m Properties of Sep_Functor are derived on φMul_Quant⇩Λ
* [33me6a08a2[m Functional TF of φMul_Quant⇩Λ is derived
* [33md4b62a7[m safe
* [33mb7de99b[m Uninstalled Determine_φType
* [33m76286dc[m safe
* [33mcdc6cb7[m SHΛ seems to work
* [33m8423b9c[m WIP: SHΛ
* [33m18c49a9[m safe
* [33m0f887fc[m Transformation Functor with Type Parameters
* [33m28bd25e[m WIP
* [33m7e83995[m Test is on-going; Specific rules are required on ✱ Σ otherwise, ✱ is essentially useless
* [33m9744ba6[m The sub-system of swapping normalization is done
* [33m4f54e13[m WIP: normalization on target assertion
* [33m157b1f8[m safe
* [33m504a8db[m unsafe
* [33m0fddf56[m safe
* [33m345fc51[m safe
* [33m6551a07[m Simplification over backward transformation
* [33m0f4db4b[m safe
* [33m1a1d8b9[m neat
* [33mf59b373[m The commutativity sub-system is neat
* [33m75be666[m Default reasoner group is done.
* [33m3f7841f[m safe WIP: default reasoner group
* [33mb53a466[m WIP: default reasoner group
* [33mb51b063[m Tyoprs_Commutativity will be derived automatically but not registered so not activated implicitly
* [33m5b0e9d2[m safe
* [33m906e132[m WIP
* [33mc544396[m WIP
* [33m7a9e684[m WIP
* [33m9346841[m A more flexible normalization algorithm
* [33mfbd833d[m notes
* [33ma88adef[m notes
* [33mebff2bc[m Normalization of commutative type operators is non-trivial
* [33md74fd0e[m The reasoning process of semimodule one should be right now.
* [33m882ea13[m WIP
* [33m48ec28d[m WIP
* [33mabd75a6[m Weight and Normalization
* [33mdc2d84a[m Weight record
* [33m39ba06c[m Notes on weight-normalization
* [33m6268247[m WIP
* [33m5e8377b[m some notes
* [33me67969c[m WIP
* [33me1db774[m WIP
* [33mc4eda0c[m unsafe
* [33mff0312d[m Semimodule_One is relaxed, by splitting to Intro and Elim rules
* [33m798eb36[m WIP
[34m|[m * [33md4a680c[m[33m ([m[1;32mt12[m[33m)[m Semimodule_One is relaxed, by splitting to Intro and Elim rules
[34m|[m[34m/[m  
[34m|[m * [33mc5668f2[m[33m ([m[1;31mgithub/t12[m[33m)[m WIP
[34m|[m[34m/[m  
* [33m388cc43[m polished
* [33m767bbdf[m The φ-type of slice is built but the semimodule-one mechanism has problem
* [33m62a772c[m safe
* [33mba07d38[m safe
* [33m2520a4b[m Semimodule_SDistr is extended
* [33m865be52[m WIP
* [33m9eb8802[m safe
* [33mb94bbea[m Σ can be really a trouble maker
* [33m4493456[m safe
* [33m92a3856[m To-Transformation in Σ has problem
* [33m7f8c8cc[m φMul_Quant_LenIv
* [33m5a1382a[m WIP
* [33m7ca7bb8[m polished
* [33ma948c8b[m All memory operations are done
* [33mdf2423b[m mem-load supports partial permission ; mem-allocation
* [33mee5c35c[m Writing Mem
* [33mfe64e32[m improve efficiency of <condition> guard
* [33mb0f24f5[m WIP
* [33mc173211[m polished
* [33m21bea70[m We can load memory now!
* [33m45ae921[m Rename nosep -> discrete
* [33m44218f8[m safe
* [33mf095e4c[m WIP
* [33mac3bb0e[m safe
* [33m5d2d546[m length representation of interval
* [33mf76adc9[m[33m ([m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m polished syntax of semantic types
* [33me5f4a03[m polished
* [33m7f66fb1[m[33m ([m[1;31morigin/phi-type-algebra[m[33m, [m[1;31mgithub/phi-type-algebra[m[33m)[m Done.
* [33m5cad07c[m Synthesis supports ToA
* [33mbc841b5[m Syntax of aggregate
* [33md656115[m Almost done.
* [33m4d523b2[m Almost done
* [33mb9f447d[m safe
* [33m31f04a8[m Almost done.
* [33m72828f5[m safe
* [33me55c485[m safe
* [33mfc950ed[m WIP
* [33m64fa452[m The entire system is almost repaired
* [33m16dfaad[m WIP
* [33me06cf6a[m[33m ([m[1;31morigin/phi_type_t1[m[33m, [m[1;31mgithub/phi_type_t1[m[33m)[m Personally hungry
* [33mf6d8d34[m WIP
* [33m62d50ce[m WIP
* [33md955b3a[m WIP
* [33mbda8c2e[m CF/Basic is upgraded
* [33me7d00b8[m New φ-lang parser
* [33m73f3998[m safe
* [33ma4f344e[m WIP
* [33mdcea1c9[m WIP
* [33mf522be2[m WIP
* [33m60e7e0c[m WIP
* [33mc98ef74[m Conversion of ToA in programming application
* [33m986cd28[m φApp_Conv: still a lot of works to do
* [33m1084b09[m safe
* [33md63ee90[m Premise-Extraction is uninstalled, and replaced totally by AEIF and AESC
* [33m999b738[m some notes
* [33m4a88ae8[m DONE: PhiSem / SYmbol & Aggregate - All & Int APrec & Real Abst
* [33mafa6e52[m WIP
* [33m8b90da1[m WIP
* [33m4dc334d[m WIP
* [33m8c9e622[m WIP
* [33m8441ee1[m WIP
* [33m53446d7[m Resource Template is upgraded
* [33md7eef21[m WIP
* [33m41ef283[m WIP
* [33m4d9e198[m φ-type def tool on local theory works
* [33m5cf6808[m Transformation Bi-Functor
* [33m7985d18[m WIP
* [33mc1f3f68[m WIP
* [33m9545956[m WIP
* [33mc9fe620[m WIP
* [33m1090da6[m Derivers of Semantic_Zero_Val and Semantic_Type
* [33m0c7e47a[m Before: move Fiction to Spec_Framework
* [33m54f6d90[m WIP: Val
* [33mb6188e4[m IDE_CP_R3 is updated
* [33m3b7b143[m WIP
* [33m97c23d6[m WIP
* [33m8a19b04[m Organized App rules
* [33m84e38e7[m WIP
* [33md2ac8aa[m A half of synthesis mechanism is done but not tested
* [33mebcbffb[m Simplified the syntax of resoner_group command
* [33m7951919[m WIP
* [33mdf4ab99[m br_join: done
* [33m68a4304[m WIP
* [33m618f229[m WIP
* [33ma38ff36[m Br_Join by TF is bad
* [33m2263215[m Branch Convergence is almost done
* [33m8d5a032[m WIP: Convergence of Branches
* [33m2e98ad1[m Apply simplification always before solving a premise antecedent
* [33m126e2cb[m All Abstraction_to_Raw are checked
* [33m2e31fac[m WIP
* [33ma2cf7ad[m cleaned φ-types
* [33m471b438[m The theory of prebuild φ-types are done! but the document is not polished
* [33mfe283f9[m All bootstrap φ-types are in the deriving engine. Itself and vertical composition are the only primitive.
* [33md997894[m Apply derivers over bootstrap φ-types.
* [33m54f7e6e[m safe
* [33m09b64ff[m WIP
* [33mcbfebf3[m To_Share ― ‹Injection from partial map to permissioned partial map›
* [33m2876bba[m Base algebras are cleaned.
* [33mb5db000[m sep_orthogonal shouldn't use mul_carrier
[36m|[m * [33mde873c2[m[33m ([m[1;31morigin/sep_orthogonal_uses_mul_carrier[m[33m, [m[1;31mgithub/sep_orthogonal_uses_mul_carrier[m[33m)[m safe: sep_orthogonal now uses mul_carrier
[36m|[m[36m/[m  
* [33mf6cb659[m Every property of φShare is derived.
* [33m8199d8b[m Asimp is fixed
* [33m8f641e4[m Trivial HO vars have to consider identical bounded vars
* [33m6eb2b58[m WIP
* [33mbc39d01[m Asimp has problems
* [33m7f98a62[m Polishing φ-TA
* [33mbffaf90[m WIP
* [33m246d0ed[m A commit for which I don't want to write any comment
* [33mca8b782[m Domainoid done.
* [33m308f381[m Annotation of case-split in safe obligation solver
* [33m4423280[m WIP
* [33m3d782c8[m safe
* [33m7239f65[m bad
* [33mcbc7aad[m WIP
* [33m430d86d[m The first property of domainoid is derived
* [33me6ad8e8[m safe
* [33m24e5b6f[m φreason_generator
* [33mef47401[m refactoring template instantiation
* [33m3e34031[m WIP
* [33m5b0491f[m WIP: domainoid
* [33m76f746f[m WIP: Domainoid
* [33me83b25a[m WIP
* [33m8b921a2[m Let the Tyopr-Comm_I&E pass
* [33ma37e0c9[m safe
* [33mce4bc91[m Refining work is finished.
* [33mb80bf5d[m Refined Semimodule properties
* [33m6810202[m Sep_Homo is refined
* [33ma2cf400[m safe
* [33m5fe25e1[m Still some problems in SH_E
* [33m79bb0dd[m Deriver of Object_Equiv now uses MAKE to destruct φ-types
* [33m44b44de[m Refining Derivers, upto FTF
* [33m2a8e6ed[m WIP
* [33mbd9bb52[m Assertions checking guessers
* [33me30bc3f[m WIP
* [33m4aef9be[m Notes about strategies guessing the property parameters
* [33mce617b9[m Variable-based Inference is unexpectedly powerful
* [33m2149da8[m Perhaps, we can give a general obligation-based inferrer
* [33m3bb97a5[m The Deriver for Object_Equiv is uninstalled as it is replaced by Identity_Elements
* [33mb2dcc4e[m Identity_Element
* [33m626d119[m WIP: simpliyfing derived result using φ-LPR
* [33m62d62d6[m Generic Guesser giving Conditions from Syntactic Expression of φ-Type Defs
* [33m2231d83[m WIP
* [33md19cccc[m WIP
* [33m27c1a62[m Guess_Tyops_Commute
* [33m2c4eb7b[m WIP
* [33m9fb6947[m Reduced Guess_Tyops_Commute
* [33m33d14ca[m Hungry personaly
* [33m00a507e[m Optimized %ToA_varify_target_object
* [33mcf4f903[m Distinguished reasoning conditions that can be instantaited or not
* [33m322b96b[m safe
* [33mcdd075e[m safe
* [33ma2ffb25[m safe
* [33m9003666[m Upgraded to Isabelle-2023
* [33mc7c5df9[m Extends Object_Equiv with Identity_Element
* [33m650d1bd[m The correct approach towards Identity_Elements
* [33mcb43e9a[m Complete Identity_Element for φFun'
* [33m5848d3a[m WIP
* [33mab8ae7d[m Three Pigs: A Synthetic Approach to Data Refinement, an Algebra of Predicates, and a General Automation for Data Structures, on BI
* [33mcc8c594[m Some notes
* [33mb2dc672[m The module of extracting pure facts works
* [33me158508[m WIP
* [33meacc97a[m WIP
* [33m70313d9[m safe
* [33mcb5998e[m WIP: extracting pure facts implied inside any inductive hypothese
* [33m02799da[m Some notes
* [33m72f93cf[m WIP
* [33m2debd3c[m WIP
* [33m2fd782b[m WIP
* [33m448f062[m Some notes
* [33m4f72b1a[m We have no time submitting it to next year's LICS
* [33m6349faf[m Induction in φ-Deriver didn't consider schematic variables
* [33me680b92[m safe
* [33me36f60b[m Active simplifier
* [33mc2c3932[m Identified problems in case-split during SE
* [33m5819cd4[m safe
* [33mb4aeecd[m Identity_Element must be able to be determined solely from type else the reasoning is flawed
* [33m5d0e682[m WIP
* [33mff4b2b3[m Stop here today and lett Tyops_Comm_I pass.
* [33m5306ce5[m WIP
* [33m43ec374[m WIP
* [33mb6c1cc8[m WIP
* [33ma631115[m Fine-tune the commutativity of Σ
* [33m8a64ef2[m The deriver for Trivial_Σ is silly...
* [33m035cbd6[m WIP
* [33m3bdb734[m WIP
* [33m184f820[m WIP
* [33m1b40c4d[m WIP
* [33m1821603[m WIP
* [33mb1b9b56[m Commutativity Deriver for Homomorphisms are done.
* [33m5c072ed[m WIP
* [33mffbaf79[m The first tyop commutativity rule is derived : Elimination side
* [33m50c15c7[m safe
* [33m1475023[m safe
* [33m6c239a8[m The first tyop commutativity rule is deriver
* [33mcd18412[m safe
* [33m6ac2492[m WIP
* [33m8115a01[m The Guessing mechanism in Commutativity_Deriver still needs some work
* [33md5550c9[m safe
* [33m6d6ebad[m Fixed deficiency in Trivial_Σ; I am thinking depreciating SE_Trim_Empty
* [33m848a4b9[m Improved Property Template Instantiation
* [33m5da67a9[m WIP
* [33m3870749[m BUG fix
* [33mfb3ab0a[m WIP
* [33me2b97f7[m What are the primitive cases for deriving?
* [33m9937c0d[m WIP
* [33m1aacc6d[m WIP
* [33m97f261a[m WIP
* [33m8673583[m safe
* [33m8322a48[m WIP
* [33maa5ef89[m WIP
* [33m785b7ca[m We are going to do the general commutativity of type operators
* [33mdcf0497[m WIP
* [33m21d47ae[m Working on Domainoid
* [33m4e47ab8[m WIP
[1;31m|[m * [33m33c33fc[m[33m ([m[1;31morigin/mul_carrier[m[33m, [m[1;31mgithub/mul_carrier[m[33m)[m WIP
[1;31m|[m[1;31m/[m  
* [33mdb69188[m safe
* [33md9d429f[m WIP: we are gonna do some meta analysis about completeness
* [33m3995f65[m Commutativity between φ-type operators gonna be problems
* [33m430413c[m I changed my idea. Fset is not rich in automation.
* [33ma264ea1[m ✱ should use fset
* [33m9ede441[m considering Semimodule_Identity⇩I
* [33m503b65c[m Algebraic properties of FMQ are done
* [33m52a6200[m Properly handle Semimodule_SDistr_Homo⇩U_rev and Semimodule_SDistr_Homo⇩Z_rev
* [33m05482d6[m A really tricky bug..
* [33m39c75c4[m Fixed Bug
* [33mfc5a6bf[m Extended Guessing of Semimodule SDistr
* [33m54c7d31[m WIP
* [33m29ff819[m Scalar Assoc of FMQ
* [33ma52f0d3[m Extended Scalar Zero and that on FMQ
* [33m04deaee[m WIP
* [33m4bb77b1[m Extended Semimodule_Identity and that on FMQ
* [33m54a5ed6[m Going to extend Semimodule_Identity
* [33m7f837b9[m Separation Homo for FMQ
* [33mbad0e7f[m IE of FMQ
* [33m07d6a49[m Transformation Functor for FMQ
* [33mb0e0f55[m WIP
* [33m6440e68[m Fix Bugs
* [33mdf57510[m Give up φ-LPR based Premise Extraction (the previous commit)
[1;32m|[m * [33mdd13890[m[33m ([m[1;33mtag: PLPR-based-Premise-Extraction[m[33m)[m WIP
[1;32m|[m[1;32m/[m  
* [33m71a70f6[m Premise Extraction has issue
* [33mc8a4867[m Funcong considers Object_Equiv
* [33mf44bd34[m Extended Scalar Association
* [33m92e13ed[m WIP
* [33m05c013e[m Conditioned Separation Homo
* [33m0156836[m The correct way to deal with conditioned separations!
* [33m1ab35b5[m Removed the locale of Tranformation Functor
* [33m7b874c7[m Removed the locale of Functional_Transformation_Functor
* [33md51555a[m Fix eta reduction
* [33me308116[m WIP
* [33m035e674[m Syntax of type embedding of FMQ
* [33me85bc9e[m The extended scalar association operator for Finite Multiplicative Quantification is just uncurrying.
* [33m6632a86[m We will have an extended Semimodule_Scalar_Assoc beyond the type limitation of Simple Type Theory of Isabelle
* [33m493d354[m Clean
* [33m91bbdba[m Rename Semimodule_LDistr -> Semimodule_SDistr
* [33mcfeefca[m Fixed the property parser for Semimodule_LDistr_Homo⇩U
* [33m79bf5c8[m Guesser for Semimodule_LDistr_Homo_U is good
* [33m77c6509[m The reasoning for Semimodule_LDistr_Homo_U is good
* [33m6d0ea13[m Guess the property of Semimodule_LDistr_Homo_Z
* [33me32c991[m The user extension for guessing entire property, is lame
* [33m3567e5e[m A version of Semimodule_LDistr_Homo_Z needing a big annotation
* [33me174caa[m bug fix
* [33meb30e3c[m and we removed one deriving annotation
* [33m2b73855[m User extension for guessing antecedents on specific forms of assertions
* [33me96f91b[m Reasoning for partial additive algebra (not tested)
* [33m85bccbc[m WIP
* [33m99d591f[m WIP: subtraction in partial addition group
* [33m3c9ca92[m Commutative scalar checker still needs some think
* [33ma98baf0[m WIP
* [33m19deb1f[m φ-LPR: pattern can be embedded in the proposition of the rule
* [33mbfb0306[m clarify the priority hierarchy of φ-Type Algebra
* [33mb58173a[m cleaned
* [33mecd162e[m Phi_BI in one.
* [33m7428dde[m WIP & transformation rules are well organized
* [33m607c4e0[m Seemly safe
* [33mbb99cc8[m WIP
* [33m66fa7a1[m WIP
* [33mb9c5eaa[m Relative priority is cool
* [33mbf71492[m ASE is merged into the standard theory
* [33md7f2c20[m WIP
* [33m4822fe9[m BI.thy is done
* [33m9a35a3b[m WIP
* [33mb32cbb0[m The Lattice of the Partial Transformations
* [33m578a7b3[m T ∗[Cw] W succeeds
* [33m6fc5f3d[m safe before using *[C] instead of ◒[C]
* [33me150889[m ASEa can be merged into ASE
[1;33m|[m * [33m273b173[m[33m ([m[1;31morigin/phi-type-algebra-no-ASEa[m[33m, [m[1;31mgithub/phi-type-algebra-no-ASEa[m[33m)[m ASEa cannot be removed.
[1;33m|[m[1;33m/[m  
* [33m86ae64d[m Uninstalled ASE
* [33m2b71747[m Before removing 𝒜SE procedure
* [33m1974e6f[m The mechanism of one-to-one transformation
* [33me48a149[m Building the framework for one-to-one transformation with potential remainder
* [33m4dd2d03[m safe
* [33mc344d6b[m The reasoning for "x : T --> y : U remains[C] R" is absent
* [33m656c13e[m WIP
* [33m8f2f5f1[m Fixed a bug in deriving fundef_cong
* [33m4aa2687[m Stop here for resting
* [33m41be557[m Attacking Semimodule_LDistr_Homo⇩Z
* [33mf8962d2[m The deriver of Construct_Abstraction_from_Raw is cool
* [33m7b8e62a[m Constr_Abst_from_Raw still needs some work but I have to attend a silly course
* [33m3c53999[m Neat
* [33ma0dc672[m Neat Carrier_Set
* [33m046d6bc[m Derivier of Carrier_Set is done.
* [33m8e94907[m safe
* [33maa91a30[m 𝒮 is Separationally Monoidal
* [33m7869f91[m reasoning Guard is first class now.
* [33mb7fa5d0[m Less shity the φ-LPR is
* [33m7e36775[m Gosh, the kernel hotspot of φ-LPR is shity!
* [33mb68f4d5[m φ-LPR: Guard tag has to be imporved
* [33mf0e3f92[m Refines LUB of sorts to exhibit optimal algebraic properties
* [33m44cfed8[m A silly sort constraint was tagged in the beginning algebra declarations
* [33m275aa77[m Sort lifting; Bug in φ-LPR
* [33m0985c67[m safe
* [33m6056f19[m Bundle works good.
* [33md870e13[m φ-Type def tool supports bundles
* [33m11e9c5a[m safe
* [33m6c9e6c2[m The correct type class of Carrier_Set and its deriver
* [33m4035a9a[m Introduce carrier set
* [33m9b4e55c[m Too hungry I am
* [33md5d17fd[m Reorganized the Hash-based Proof Cache
* [33m3dbe12a[m A fucky silly bug ruins my afternoon.
* [33mb75a0dc[m Remaining enemy in the stage: Domainoid, Finite Quantification
* [33md9ad0fc[m φ-LPR: backtracking between branches of identical priority
* [33maa0e19d[m In total 31 rules for Semimodule Left-Distrib plus one that doesn't exists
* [33mafd28e1[m ToA Branching tested; Half of ToA for Semimodule Left-Distributivity
* [33mdbb45dd[m ToA having Remain as a usual logical connective
* [33m3fd941e[m Variable convergence in transformation of Conditional branch in source
* [33mda8e3f2[m WIP
* [33m18f0cb3[m There will be more than 20 rules for just Semimodule left distributivity
* [33mbd7f334[m WIP
* [33m6327eb3[m Fix deficiency in Transformation reasoning
* [33mfcd042d[m I love the power of current template instantiation
* [33mda89a2a[m WIP
* [33m7cb31bb[m Guess operators of semimodule
* [33m099635c[m Left-closed right-open interval is a partial additive group
* [33m618be6b[m Deriver for Semimodule_Zero
* [33m95d37f4[m WIP
* [33m28f74a9[m Deriver for Semimodule_Identity
* [33m2fb9af7[m The deriver for Semimodule_Scalar_Homo arrives
* [33md8d7cca[m Reaching the deriver for Semimodule_Scalar_Homo
* [33m074f450[m WIP
* [33m3690bab[m Derivier for functionality
* [33m437550f[m It is okay to mix BNF guessing and free schematic inference
* [33m74a1be3[m Abstract_Domain_L is derived implicitly
* [33me1380b2[m More motivation
* [33m289c59c[m Motivation of φ-type algebra
* [33m06dc64b[m Deriving lower bound of abstract domain
* [33mebcea0f[m Replace Implication deriving by Abstract_Domain deriving
* [33medd063b[m Towards the homomorphism of the left distributivity of semimodule, as complete as I can
* [33m2b9263d[m A safe point before removing the carrier set in module structures
* [33m28bd15a[m Normalized the names of several stuffs
* [33m28edc06[m WIP
* [33mdfd00b1[m Let's start deriving the semimodule properties
* [33mf266a7f[m Minor Stuffs
* [33m996a084[m WIP
* [33m4cd027f[m The world didn't explode
* [33m69335c5[m WIP
* [33m08168ff[m Simplification using extracted premises
* [33m11a7457[m Multiplicative Finite Quantification
* [33m29a9c3e[m Linked Separation_Disj into the φ-type automation
* [33m7d55f9d[m φ-LPR can extract premise augmenting the proof obligation from arbitrary antecedent which are not necessiarly syntactic premises
* [33m34bed5b[m too exhausted to work
* [33mb0849bf[m safe
* [33m98d904e[m WIP
* [33m14fc673[m WIP
* [33m27b807c[m WIP
* [33m8cb511e[m The justification for domainoid sounds good,
* [33mb5f523e[m Straight Punch by Domainoid
* [33m23fae53[m The method of implication dual is wrong.
* [33m5a68e20[m Memoization in φ-LPR
* [33m735ecd9[m WIP
* [33m74395d5[m WIP
* [33m3683b52[m WIP
* [33m5830087[m WIP
* [33ma76ec20[m WIP
* [33mc26693f[m Justification for why we only support right-half homomorphism of separation disjunction in the separation insertion
* [33mf279940[m WIP Sufficiency Reasoning
* [33m728cb88[m I love the current deriver framework
* [33mcbbc73a[m strengthen simplification of object conditions and constraints
* [33maaee08a[m Pretty error printing
* [33m258bd2a[m WIP
* [33m421b1d0[m What if we heavily use case_prod instead of the fst and the snd
* [33mc6a5951[m Fuck the singular point of Object Equivalence
* [33mad5f174[m WIP
* [33mf598aac[m Special process for Object_Equiv (F O) (λ_. True) is demanded
* [33m0f17aed[m WIP
* [33m2c7bbb6[m WIP
* [33m9edbb7c[m Auto: congruence rule for Isabelle Function package
* [33m7b715ec[m Variant between Instantiations
* [33m207aff6[m SE trims empty
* [33m63d231b[m Trim waste in Separation Extraction
* [33ma9c641f[m Derivier for Trivial Σ-Homomorphism
* [33m83edecc[m Deriver framework is more robust
* [33m17b094a[m WIP
* [33mebc1243[m Time to have a rest
* [33m8cfecb9[m WIP
* [33me369b0e[m φ-LPR supports explorative backtracking
* [33m621a6a3[m WIP
* [33m92c02e0[m SE for non-unital group and non-semigroup
* [33mb2c3288[m The Separation Extraction on Boundary case is wrong!
* [33m7060409[m WIP
* [33m6575aca[m WIP
* [33m8a16f18[m WIP
* [33m2fadea1[m A rewrite process that moves sp-Ex down to the bottom
* [33m6ec221e[m WIP
* [33m7066d57[m WIP
* [33m6dc637c[m WIP
* [33ma578828[m WIP
* [33mc955183[m WIP
* [33m85bc1d8[m WIP
* [33mdb32c08[m WIP
* [33m79212fc[m Cool! handle the generated existential quantifiers in proof obligation neatly
* [33m3b5366f[m WIP
* [33mf7b3f81[m Fuck the side effect of the covid vaccination
* [33mf138fca[m WIP
* [33m903acad[m WIP
* [33m988ba0e[m WIP
* [33m0f0bafd[m Some documents
* [33m89e9478[m Make Abstraction
* [33m2d6f579[m WIP
* [33me8b125d[m Transformation based Simplification should work now
* [33md8bf890[m WIP
* [33m8de301a[m safe
* [33mdfbd5a0[m WIP
* [33mf787927[m WIP
* [33m6a01566[m WIP
* [33m66d3cab[m Fix bug in Simplification Protectors
* [33mfe31e90[m Σ-type and Σ-homomorphism
* [33m814d17c[m WIP
* [33m6c49ef2[m WIP
* [33mb525fcf[m WIP
* [33m79370e5[m Give transformation functor a range constraint to enable dependent transformations
* [33mfd70e1b[m WIP
* [33m8285582[m WIP
* [33md790ad2[m WIP
* [33m29ff71c[m WIP
* [33m423aadb[m WIP
* [33m5abf111[m WIP
* [33m777c01c[m WIP
* [33ma46e5c2[m WIP
* [33md3f0974[m WIP
* [33m5b80ca6[m Done: case analysis
* [33m6483be9[m WIP
* [33m6f22aee[m WIP
* [33m186a7d7[m WIP
* [33m5e7bb92[m WIP
* [33m3fbcc34[m WIP
* [33m2f9baee[m Before: very dangerous changing
* [33maa58560[m WIP
* [33me5703db[m WIP
* [33m3bed101[m WIP
* [33mc5aa001[m WIP
* [33m18f55c7[m nice deriver
* [33m4d8e32a[m WIP
* [33m577ccaf[m property deriver!
* [33mc57b87e[m WIP
* [33m18c60fe[m WIP
* [33me83cc6b[m WIP
* [33me5e8f81[m WIP
* [33m7be9e3e[m WIP
* [33m7d53656[m WIP
* [33mb5e3ffd[m WIP
* [33m0f0334c[m WIP
* [33m72dd6b8[m WIP
* [33mc6114d4[m WIP
* [33m31a10c2[m WIP
* [33m525c9d8[m WIP
* [33m50b1d50[m WIP
* [33m5b7827a[m WIP
* [33m7c18816[m WIP
* [33m607a42f[m WIP
* [33mbeb4dec[m Start auto gen for units
* [33m7c31300[m WIP
* [33m7a670d3[m WIP
* [33m061c0e4[m Phi Reasoning is context-constant now
* [33m8df7d47[m WIP
* [33m7338771[m Inhabitance Reasoning: infer the object-logic facts directly
* [33m85a2c71[m Improve constructions of implication
* [33md1dd036[m Assign new semantics to x : T --> ?y : U
* [33mc58d0c3[m Improve ExSet syntax
[1;34m|[m * [33m5ef0b57[m[33m ([m[1;31morigin/fix-type-algebra[m[33m, [m[1;31mgithub/fix-type-algebra[m[33m)[m WIP
[1;34m|[m * [33m55a80d8[m WIP
[1;34m|[m * [33m3f2823c[m WIP
[1;34m|[m * [33m9b245fa[m WIP
[1;34m|[m * [33mefc647f[m Rule Generation for Transformation Functor
[1;34m|[m * [33mcfb3c91[m WIP
[1;34m|[m * [33me0afc5b[m WIP
[1;34m|[m * [33m9cf2abf[m WIP
[1;34m|[m * [33m85c0472[m WIP
[1;34m|[m * [33m7cea893[m WIP
[1;34m|[m * [33m3ca36a0[m WIP
[1;34m|[m * [33m251f9ec[m almost clean
[1;34m|[m * [33md485d5d[m WIP
[1;34m|[m * [33m2543f2d[m Simple derivation
[1;34m|[m * [33mf7e1908[m WIP
[1;34m|[m * [33mb75f5f8[m Improve constructions of implication
[1;34m|[m * [33m09881ba[m Assign new semantics to x : T --> ?y : U
[1;34m|[m * [33m81af0d1[m Improve ExSet syntax
[1;34m|[m[1;34m/[m  
* [33mc055662[m Proof obligation: only extract contextual antecedents who are tagged by <premise>
* [33m8f39b77[m Action_Tag now is in HOL
* [33m7361e80[m Separational Disjunction Injective
* [33m2913538[m Normalization of * type in ToSA reasoning
* [33md9a3b4f[m Improve the frame-variable-padding for non-unital algberas
* [33m183acde[m Fixes
* [33m8a6bfaa[m Polished aggregate access
* [33m33839db[m Assign to an element in a variable
* [33m4decad8[m val x <- aaa
* [33maef3541[m GEP with user interface
* [33ma1d57a0[m GEA via triangle dot
* [33mb4269b6[m Aggregate access using bracket
* [33mcb34e2c[m Aggregate construct and access
* [33m5023931[m Syntax preparation for tuple / structure access
* [33mb12a80e[m Syntax preparation for tuple / array access
* [33m7824d7d[m Improve operator syntax
* [33mb03ae2e[m Infix operators in Isar-phi-programming
* [33m47d114c[m WIP
* [33m7c6e84a[m improve GEP
* [33m3cb1206[m Get Element Pointer
* [33mff82fc7[m Semantics: Aggregate Named Tuple
* [33m97e914f[m WIP
* [33mc957be9[m Resource template OK
[1;35m|[m * [33m2c83d8b[m[33m ([m[1;31morigin/resource-template[m[33m, [m[1;31mgithub/resource-template[m[33m)[m Resource template OK
[1;35m|[m * [33mba7d764[m WIP
[1;35m|[m * [33m37c10fa[m WIP
[1;35m|[m * [33m1e89bd7[m WIP success
[1;35m|[m * [33m0031c6d[m WIP
[1;35m|[m * [33mf10512d[m WIP
[1;35m|[m * [33ma28b725[m WIP
[1;35m|[m[1;35m/[m  
* [33ma4b2f53[m Applying refinement-based FSL in Variable semantics
* [33md1920d1[m Polish names
* [33m8cfd428[m tmp-safe
* [33m62c2579[m Improve simp tac and auto tac in PLPR; WIP: ng-fiction of Variable
* [33m2723085[m WIP
* [33m1c657c4[m WIP
* [33mc5d4b10[m Polish names
* [33m728dfc9[m Making φ-definition
* [33m78fa73d[m WIP
* [33m405629a[m WIP
* [33m8bb6316[m Improve PLPR
* [33m6c67117[m WIP
* [33m250272c[m clean
* [33md3d53bb[m Refinement Algebra is Cool
* [33m656110f[m Refinement-based fiction, WIP
[1;36m|[m * [33me2a7080[m[33m ([m[1;31morigin/ng-fiction[m[33m, [m[1;31mgithub/ng-fiction[m[33m)[m WIP
[1;36m|[m * [33m9842154[m WIP
[1;36m|[m * [33m870f727[m WIP
[1;36m|[m * [33m2f5b907[m WIP
[1;36m|[m * [33m830790b[m WIP
[1;36m|[m * [33m6affd6a[m WIP
[1;36m|[m * [33m67cb831[m WIP
[1;36m|[m * [33m302910d[m WIP
[1;36m|[m * [33m0bea9a8[m fixed
[1;36m|[m[1;36m/[m  
* [33m79343b8[m Use sep_homo_set
* [33me367274[m everything is here
* [33mbb770bc[m Simplify syntax }. -> }
* [33m4c0654f[m clean
* [33md864573[m WIP
* [33m00d7c08[m Transparent sledgehammer being a proof method
* [33mc3e1545[m Polish
* [33m61012d5[m Update font
* [33md9a73bb[m Clean syntax
* [33m880df6d[m Syntax: affirm -> certified
* [33m3a3ff53[m Syntax: use parenthensis to replace { }.
* [33m053e91b[m Fix bugs
* [33m8ff4fae[m Fix bugs
* [33m289f5a9[m Transparently call slegehammer
* [33m32e2644[m Improve some syntax of synthesis
* [33m75e817e[m Parenthensis syntax
* [33m4dca4fa[m Syntax of Abst Real
* [33mf4440f1[m Shorten names of fixed variables
* [33md8590cd[m Fix bug in simplifying monad
* [33med0d65e[m Improve: GVA assignment
* [33m85673a6[m Add two lines explaining the example
* [33m9a6f3d7[m WIP
* [33mc6db617[m $val can be used in specifications to get the contextual value
* [33m09cfe24[m GVA uses checked internal term now instead of unparsed term
* [33m82b4f06[m Variable syntax
* [33m3d70f7e[m Improve simplifier
* [33m3a11400[m Improve simplifier.
* [33mfbcdfb3[m Improve: Syntax of ∃* in zero quantifiers
* [33me5a70a7[m Update Readme.md
* [33m5253dc1[m Improve Boolean Constants
* [33mf08d1a4[m Fix: failure of simplifying abnormality spec in accept proc
* [33m90fb51d[m Rename bad names
* [33m14622b8[m Make the prime example a bit harder
* [33m8da0dac[m Update Readme.md
* [33m3093fec[m Improve syntax of variable
[31m|[m * [33m1c40979[m[33m ([m[1;31morigin/gh-pages[m[33m, [m[1;31mgithub/gh-pages[m[33m)[m update htmls
[31m|[m * [33m2ff99dc[m update
[31m|[m * [33mfbde3ee[m update html
[31m|[m * [33m3127492[m update
[31m|[m * [33mdd88be5[m update
[31m|[m * [33md6399d2[m Add images
[31m|[m * [33m472c964[m updated examples
[31m|[m * [33mf440e94[m Add an examlpe of prime number
[31m|[m[31m/[m  
* [33md040a84[m Improve Simplification
* [33me2a0d5d[m Add an examlpe of prime number
* [33m2b73e44[m An example of prime
* [33m99fa5be[m Special process for ToA towards an entire hole
* [33m8d58ec5[m LICENSING
* [33mba1f541[m prepare for releasing the preview
* [33m6bbdcf4[m WIP
* [33m5eec7be[m Simplify lemmata
* [33m5afd184[m WIP
* [33mb3c2c07[m Improve: conve GE to plain thms
* [33medf12f9[m Check_Literal -> Is_Literal
* [33mb97ff8b[m WIP
* [33mc00205f[m WIP
* [33m2addce7[m Improving Branch Convergence
* [33mcd389c6[m WIP
* [33m9301724[m WIP
* [33m0b6a601[m WIP
* [33m34c72ba[m Differentiate the name used for varname and valname from external names
* [33m7c6f232[m Do not bind technical items, in programming
* [33m94e7e56[m Uniformly use Technical tag to hide technical details
* [33m708dcc2[m clean
* [33mc8dca18[m Instantiation Tools for Resource Space
* [33mdd08938[m WIP
* [33m94af54c[m Slight change in Algebra
[32m|[m * [33m0790425[m[33m ([m[1;31morigin/dev-mem[m[33m, [m[1;31mgithub/dev-mem[m[33m)[m Slight change in Algebra
[32m|[m[32m/[m  
* [33m0855f50[m WIP
* [33mc850d07[m Semantic Formalization Tools: make the Hybrid DL explicit
* [33m2d0bee0[m Rename state -> comp
[33m|[m * [33md27ce54[m[33m ([m[1;31morigin/refinement-algebra[m[33m, [m[1;31mgithub/refinement-algebra[m[33m)[m WIP
[33m|[m * [33m4ea4fd4[m WIP
[33m|[m * [33m22c004f[m WIP
[33m|[m[33m/[m  
* [33m62d4ffb[m OO mem is fixed
* [33mb20bc99[m Deficiency in Resource Space, use separation closed set instead of separation homorphic set
* [33m7f5f527[m Coercion of φ-type
* [33m745178d[m debug printing when adding reasoners
* [33meec8614[m Debug printing in PLPR
* [33mea7fb9f[m Algbera of class inheritance in OO
* [33m8a2eb50[m Clean version
* [33m3814cd8[m Imprefect syntax of Aggregate Tuple tested
* [33md28d64a[m WIP
* [33m66ac3c3[m Aggregate Array : WIP
* [33m3839104[m Aggregate Tuple: WIP
* [33m8ab3f39[m Remove common base for semantic type and value
* [33m13123e6[m Routine that can return
* [33m29dde04[m Resource/Fiction space hide internal debt_axiom
* [33mba94d45[m Fix a bug in Fictional Frameworking disabling multi-fiction when instantiation
* [33m0730f92[m Small fix
* [33m54cfdf0[m WIP
* [33m9fe20b4[m Functional can matter
* [33ma7d3c18[m Towards Refinement Algebra
* [33me821a2c[m Inhabitance Reasoning
* [33mf51b701[m Reduce the abnm spec early
* [33m21d6172[m Rename overloadings: No Symbol, No Infix
* [33md7825c4[m Parenthesis Syntax
* [33m1e78360[m Semantics for abstract real numbers
* [33m57ab5aa[m Disable auto-cleaning of argument at proc begining
* [33m4f348bc[m Rename nonsepable -> nosep
* [33m3fbd85f[m More pairwise algebra!
* [33mb537fa7[m Semantics: routine
* [33md9f1b46[m Better Syntax!
* [33m2e5d991[m Short cuts for synthesising machine integers
* [33m9fbc10b[m PLPR: OK!
* [33m63e386d[m PLPR multi-binding: tested
* [33mbc3dd24[m PLPR: bind on patterns of different priorirty
* [33m51d1c6a[m PLPR
* [33m264b769[m Small optimization in Optimal_Solution
* [33mad81c25[m Remove rChoice.
* [33md1f918f[m[33m ([m[1;31morigin/synthesis2[m[33m, [m[1;31mgithub/synthesis2[m[33m)[m Clean tailing spaces
* [33m548d9d4[m Global Optimization in Synthesis
* [33ma5b3cd5[m PLPR: Optimimal Solution
* [33mdd062ac[m WIP
* [33m72905db[m WIP
* [33me3f5bfc[m WIP
* [33m4e5288b[m Remove priority record in PLPR
* [33m1e19933[m More Machine Int operations
* [33m6dbda0f[m Machine int cast
* [33meb0b768[m Machien Modulo
* [33mcd7c908[m Rounded Machine Nat; Signed Division
* [33m2039410[m Overloaded Synthesis!!!
* [33me7c1cfb[m Almost done: Synthesis
* [33mc0315dd[m Synthesis Rule Generation!
* [33m862a78f[m cleaned
* [33m70e12b6[m φaccept_proc_optimize_return_v
* [33m2642805[m Use simpset to boost performance and to support simproc
* [33md6ed6d7[m Working Mode
* [33m412604c[m Freeze the lemmas at the end of each statement
* [33m167807e[m Phi_Envir
* [33m334ed5e[m Improve PLPR: use Net directly instead of Item_Net
* [33me4e8bd6[m PLPR: Pattern Translation
* [33me98f13d[m Improve PLPR
* [33mf7acc7a[m Optimize acceptance procedure
* [33m7c54184[m Improve definining procedure
* [33m48c8d90[m Print φ-reasoners
* [33m4c9e5fa[m Improve φ-LPR
* [33m5c0b9d7[m Reasoning: Remove_Values
* [33m40d372a[m Rename Exception -> Abnomality
* [33m09c3478[m Improved Named-Quantification Expansion, by conversion
* [33mda6a983[m Treat eta contraction with caution because it erases quantifiers
* [33m9c19aed[m Finally, recursive
* [33m77ba33b[m basic recursion
* [33me6273a6[m More Supports for packing values
* [33m483a785[m Isomorphic Atomize
* [33m7345d80[m Clarify Non-Termination & Assumption-Broken in Semantics
* [33m4232f73[m FIX: default pattern in PLPR
* [33m303c5a7[m clean
* [33m999148a[m Polish Reasoning Rules
* [33ma7aa36f[m Polish Reasonig Rules
* [33m46e11c7[m WIP
* [33mde13121[m WIP
* [33m891e89a[m WIP
* [33m96e0f21[m WIP
* [33mcaae996[m Recursion Guard
* [33m3a634a0[m ML Guard for Reasoning Rules
* [33m4aa4f04[m WIP: new ToSA
* [33ma2d7092[m The main transformation is now implication instead of view shift
* [33m49bbc79[m Native 𝗋Call_I
* [33m1d72360[m Environmental Variable in PLPR
* [33m051aea0[m WIP
* [33mc1de460[m[33m ([m[1;31morigin/machine_int2[m[33m, [m[1;31mgithub/machine_int2[m[33m)[m Distance-based Overloading
* [33m3ece152[m WIP
* [33m3dd7f62[m Optimum Reasoning
* [33m5df07ea[m Action now doesn't have the type parameter
* [33madf606f[m rFeasible -> rREQUIRE
* [33medbfce8[m Several Things & Machine Integer WIP
* [33me5d4fe7[m Several small stuffs I forget
* [33ma7e606b[m Default PLPR pattern for implication
* [33m9895f82[m The Friendly Character!
* [33m784cfee[m Show properties by programming
* [33m583ebb4[m Programming Method by PLPR
* [33mfce9337[m Several Stuffs
* [33m8b54e3c[m Rename φApplication_Method -> φApplication
* [33mf8ed055[m Rename prem_transformer -> perm_functor
* [33mad266d3[m minor revision of As
* [33m393cacf[m The mechanism of 'As'
* [33m8781509[m Mechanism 'To', transforming to the given φ-type
* [33m98c0d23[m Fix bug in premise_attribute
* [33m74e22c0[m Clarify reasoning obligation.
* [33m080e8d0[m Clean the smell of action mechanism
* [33ma1dbf02[m Fix: forget increasing indexes before Thm.instantiate
* [33m21f47fc[m PLPR: divergence in a local cut
* [33mfc8129a[m Change syntax of view shift
* [33m3625371[m Simplify Working Mode
* [33maf7d989[m Rename fields in Working Mode
* [33m871a49d[m PLPR pattern; IDE-CP processor; Application for resolution.
* [33m31a202c[m The meta MP is another application now.
* [33m84cb79a[m Change of Application
* [33m3b9080b[m The programming should not encounter higher order unification now
* [33m0bdccd6[m Construct \& destruct user φ-Type
* [33m46dface[m Termination condition in a breakable loop is not necesarily the negation of the guard
* [33m902a9a8[m Hide internal details
* [33mfe84a83[m Break / continue a while loop.
* [33meedbfde[m New procedure header command.
* [33m112124f[m General attributes for premises
* [33ma53ec01[m Fix: eta beta normalization in PLPR Reasoner
* [33m951cc87[m Fix bug in Toplevel.md: beta-eta-contraction alters conclusion of proof state
* [33m252b5bd[m WIP: PLPR Optimal Solution
* [33m33a0370[m update ROOT files
* [33m5104284[m φ-Type definition
* [33mf6c51e5[m Formalizing Arbitrary Precision Integer
* [33ma6e07f4[m Small optimization of the previous commit
* [33m4800a22[m Trim fixed paramters of a schematic variable
* [33ma2749a1[m Short-cut for assigning variables if no allocation
* [33mcf679d7[m WIP: Control Flow Break
* [33m0786017[m Breakable While Loop: testing
* [33m5637d8d[m Improve syntax translation
* [33m7277529[m ToSA ertains subjection in the source part.
* [33m20b9dae[m Final unification of ToSA considers existential quantification
* [33mb72418b[m Pretty sytnax of break-frame
* [33mbdea09d[m Syntax enabling hide techinical separation items
* [33m48805aa[m Migrate to Isabelle2022
* [33m2a45930[m Syntax of Bottom
* [33me330ba5[m Rename sem -> φarg
* [33m0ec0b17[m Interpolate types in PLPR message.
* [33m306aaf1[m Optimize Sys.ACCEPT
* [33m3170d3f[m Several Stuffs
* [33m12bf4ad[m Stuffs about Reasoning
* [33m0d2d30d[m Begin-Block can set names of fixed variables now
* [33m2380c7c[m WIP: testing Control Flow break
* [33mdcc08fd[m Reasoning Process of Breaking Frames
* [33mbbb6e5e[m Change the judgement for constructing ToA
* [33me2761a8[m Control flow break: almost done
* [33m5395008[m[33m ([m[1;31morigin/feature-exception[m[33m, [m[1;31mgithub/feature-exception[m[33m)[m WIP
* [33m074a9cb[m Rename ERR -> ABNM
* [33m5d44f28[m Rename sem_value -> sem; Computation state use ERR instead of VAL now.
* [33m74b0276[m WIP
* [33mb87bcd8[m Fix wrong arguments in Debt Axiom
* [33m9989f9f[m Improve syntax of proc assertion; Add name in Working Mode
* [33m2c3a4ee[m Fix bug about Working Mode
* [33m799ae76[m Rename the Phi_Basics -> Phi_Envir
* [33mf1400fc[m Fix bug in generic_variable_access.ML
* [33md95fc6b[m Made a top theory combining components of IDE-CP
* [33md6cd20a[m Hide internal value name during programming
* [33m966ac1a[m Debug info for default pattern
* [33mf3b65fe[m Improve Syntax
* [33mc334312[m Using action_tag to annotate subgoal context
* [33m36b456f[m Improve syntax
* [33m0ed96e4[m Fix bug in procedure.ML
* [33m22d996d[m Improve syntax of proc
* [33m7ea0492[m Optimize syntax for proc command
* [33mc5da4ca[m Fix bugs relating declarations in local theory.
* [33maf5401a[m Refactory directory structure
* [33m8ef2655[m Variable OK!
* [33m00bc669[m Refactory the GOAL context in ToSA problem
* [33m498539b[m Assignment Okay; Generic Variable Access Okay
* [33m91c55c8[m Before: add pure fact to cast
* [33m61a2669[m WIP: Variable Mechanism
[34m|[m * [33mcaba369[m[33m ([m[1;31morigin/feature-Variable[m[33m, [m[1;31mgithub/feature-Variable[m[33m)[m Variable OK!
[34m|[m * [33m54a6cd4[m Refactory the GOAL context in ToSA problem
[34m|[m * [33m5a717fc[m WIP
[34m|[m * [33m099e0ef[m Assignment Okay; Generic Variable Access Okay
[34m|[m * [33ma2bce9e[m WIP
[34m|[m * [33m721765a[m WIP
[34m|[m * [33m6b13934[m WIP
[34m|[m * [33m3670597[m Before: add pure fact to cast
[34m|[m * [33m476ecf1[m WIP
[34m|[m[34m/[m  
* [33m4f8ef9c[m Split semantic modules
* [33me2494e5[m Clean the directory structure
* [33mebfd16d[m WIP
* [33md071d52[m WIP
* [33m6cb3aa6[m Migrate the system onto Debt Axiom
* [33me28e19e[m Debt Axiom
* [33m25e98fe[m WIP
* [33m36697c4[m Given a proper name for application rules.
* [33mccbe42f[m Append an obligation antecedent automatically during the reasoning of application
* [33m6610259[m Reasoning Frame
* [33mc419057[m Before: remove milestone feature in φ-LPR
* [33m35b13cc[m WIP
* [33mae55468[m WIP
* [33mb2ca31a[m WIP
* [33m07e4308[m WIP
* [33ma3d09ec[m WIP
* [33mbf5ee2a[m WIP
* [33m7588095[m WIP
* [33m15dd7e8[m WIP
* [33m75dab94[m Doc
* [33mb4162b0[m WIP
* [33mfbf3d82[m WIP
* [33m98f27f8[m[33m ([m[1;31morigin/dev[m[33m, [m[1;31mgithub/dev[m[33m)[m Documentation for PLPR
* [33m2f38066[m Reserve Morphism done almost
* [33m170d127[m Reverse Morphism OK.
* [33md4fbc35[m Move all generated morphisms into a dynamic lemma 'φmorphism'
* [33mdf87ad8[m safe_wip
* [33m132c921[m wip
* [33m5ccae8c[m wip
* [33meeed175[m WIP
* [33m39bb808[m Clean wastes generated in automation
* [33m08a53e2[m safe
* [33m8d5af96[m Improve PLPR
* [33md03727d[m safe
* [33m4e4c9fb[m ERC20-naive
* [33mc72016f[m ERC20-naive
* [33ma295a81[m WIP
* [33mcb7f627[m safe
* [33m42685e1[m unsafe
* [33m9a4e884[m WIP
* [33m51490d6[m WIP
* [33me704adc[m safe
* [33m7a5649c[m safe
* [33m1f60c1f[m WIP
* [33m2809bcc[m WIP
* [33mfa2bb2f[m safe
* [33mac60c9a[m WIP
* [33m397d81d[m Cancel algebra Fine
* [33mbb6b271[m WIP
* [33mbb2e79f[m WIP
* [33m4d0df87[m WIP
* [33mda0ffc5[m WIP
* [33mbde8809[m WIP
* [33m5629b83[m rebel
* [33mcfdd3a2[m rebel
* [33m9a7c2b8[m rebel
* [33m3ac644e[m safe
* [33m0749cc7[m WIP
* [33m6c220c2[m WIP
* [33me4c67e3[m safe
* [33m2ec4e65[m WIP
* [33m0be2d07[m WIP
* [33mb1efdb1[m WIP
* [33mb143581[m WIP
* [33m3a98dc1[m new synthesis mechanism
* [33m44b788e[m WIP
* [33m205245d[m safe
* [33me053bdb[m nondet
* [33m39b8f3e[m WIP
* [33m991c8cf[m WIP
* [33m1b4aff6[m The reasoning automation works on View Shift now.
* [33m7f5fcbb[m WIP
* [33m4219de3[m safe
* [33m41cfe5b[m WIP
* [33me8c0fd6[m WIP
* [33mb87e1b3[m safe
* [33m90f5014[m clean
* [33mb2dabfe[m safe
* [33m152771f[m WIP
* [33mccb485d[m WIP
* [33m0e9ff4d[m WIP
* [33mb7510b6[m safe
* [33m1c3b392[m rename
* [33maaca5c9[m Modular Semantics
* [33mb46e09f[m safe
* [33m102fee7[m Semantic Model OK
* [33m889e0e5[m Reasoning: divide C for subtyp A+B --> C
* [33m30d1738[m WIP
* [33m1beb1b8[m WIP
* [33m293c06f[m WIP
* [33m677b7b1[m WIP
* [33m856c72c[m[33m ([m[1;31morigin/very-like-stack-monad2[m[33m, [m[1;31mgithub/very-like-stack-monad2[m[33m)[m WIP
* [33md6ce19d[m WIP
* [33m059b61c[m WIP
* [33m03b8c26[m[33m ([m[1;31morigin/very-like-stack-monad[m[33m, [m[1;31mgithub/very-like-stack-monad[m[33m)[m WIP
* [33m7935bf2[m WIP
* [33mf22f58e[m WIP
* [33mbc41e89[m WIP
* [33mded36fa[m WIP
* [33m48ca2f9[m WIP
* [33m865aa16[m WIP
*   [33m7c4cd60[m Merge branch 'dev' of github.com:xqyww123/nu-system into dev
[36m|[m[1;31m\[m  
[36m|[m * [33ma889c83[m WIP
* [1;31m|[m [33m3895836[m WIP
* [1;31m|[m [33ma39150a[m UGLY: Bad rec-proc
[1;31m|[m[1;31m/[m  
* [33m4f60b17[m WIP
* [33m029f50e[m WIP
* [33m93f54aa[m WIP
* [33m146340d[m WIP
* [33md96cbac[m WIP
* [33ma1e9bd7[m WIP
* [33mc1ed3e2[m WIP
* [33m5c36bee[m WIP
* [33mb5b93f2[m WIP
* [33mf4db56f[m WIP
* [33me8172fb[m WIP
* [33mf0d83c5[m WIP
* [33mbeb2fb4[m WIP
* [33mfff2c42[m WIP
* [33mb72df00[m WIP
* [33me147998[m WIP
* [33m6248826[m WIP
* [33meec3990[m WIP
* [33m407ed3f[m safe
* [33m263cf6f[m WIP
* [33m08e7f92[m WIP
* [33m9b5502f[m WIP
* [33m9614f83[m WIP
* [33md8e2542[m WIP
* [33m09ea1dc[m VDT
* [33mf3c7d38[m RepSet
* [33m8fe0f0f[m WIP
* [33m7375122[m Clean
* [33meb73743[m Clean
* [33ma91a279[m WIP
* [33m253a24a[m polishing
* [33ma9a704c[m pretty debug info
* [33m52e025b[m WIP
* [33ma13c733[m WIP
* [33m52ed495[m WIP
* [33meb0e1e7[m VCG: Branch Converge Desicition Procedure
* [33me3fde82[m WIP
* [33mc952393[m WIP
* [33m747e9f2[m WIP
* [33m50a6030[m WIP
* [33m79d38e3[m WIP
* [33m89c8c9e[m WIP
* [33mbdb7b52[m WIP
* [33m6ba68a9[m WIP
* [33m9582014[m WIP
* [33mce46ed4[m WIP
* [33m2e4b6d4[m WIP
* [33m9993acc[m WIP
* [33m22dcad4[m WIP
* [33md3ecb43[m WIP
* [33m22486f3[m WIP
* [33m7fab1dd[m WIP: beautify syntax
*   [33mc91d2d6[m Merge branch 'separation'
[1;32m|[m[1;33m\[m  
[1;32m|[m * [33mbc28827[m clean and qsort
[1;32m|[m * [33m998b25a[m WIP
* [1;33m|[m [33m5e38cbd[m clean
[1;33m|[m[1;33m/[m  
* [33m77be10a[m safe
* [33m48e6ab0[m safe
* [33m55cf073[m codege OK; safe
* [33m06b358a[m safe
* [33meeb19cb[m safe point
* [33me8cd95e[m before a  war
* [33md89d78d[m safe point
* [33m651ba96[m Done: codeblock by Assumption.export
* [33m1c15208[m Now everything slim more
* [33m642a0fb[m Safe point of the, before: deprecate volatile codeblock assumption
* [33m919dde0[m before: frama rule
* [33m43d05e4[m Before: deprecate the volatile CodeBlock hypothesis
* [33mdd3a9fb[m Cast constr envir is not good.
* [33m35af052[m Before: NuApplication
* [33m2a5b653[m Before: cast construction environment
* [33m8fc5c2e[m Before: priority based nu auto reasoner
* [33m8f92b6d[m function in progress
* [33m9403bda[m WIP
* [33m767d113[m OK: while
* [33mcd9b58c[m WIP
* [33mfb3eb0e[m variants
* [33mec019bf[m cast
* [33m0957c5f[m WIP
* [33m912e5a3[m until-loop
* [33m9d2792a[m NuCong
* [33mc0d6711[m WIP
* [33mf255b3e[m local_value_ok
* [33m40b1eff[m multi-let
* [33mdd7dc59[m WIP
* [33m3ccf640[m save
* [33mc66ebe2[m WIP
* [33m93fd514[m WIP
* [33m5e358fc[m before:cast-precond
* [33m4ed45e0[m WIP
* [33m3a7be4a[m WIP
* [33mf3d4fd6[m WIP
* [33mc08159f[m WIP
* [33m48745dd[m save
* [33mfe1b9b7[m WIP
* [33ma2ce1f3[m save
* [33me3279a0[m not good
* [33m8e29d2e[m t1
* [33m910aaec[m disj
* [33m4311982[m X00
* [33m09cf2d7[m X00
* [33mdc25f05[m XX1
*   [33mfb13b43[m Merge branch 'master' of github.com:xqyww123/nu-system
[1;34m|[m[1;35m\[m  
[1;34m|[m * [33m5d66ed5[m proven some unfinished theorems
* [1;35m|[m [33m77d6b0d[m recursion syntax almost
* [1;35m|[m [33m8244407[m WIP
[1;35m|[m[1;35m/[m  
* [33meaf371e[m while syntax sugar
* [33m61e341d[m WIP
* [33m465662f[m WIP
* [33md6a4cc4[m WIP
* [33me9d3706[m WIP
* [33me9db862[m WIP
* [33mc1f8d59[m WIP
* [33m8ea0998[m WIP
* [33m989e80a[m WIP
* [33mb575a69[m WIP
* [33m7ff7996[m WIP2
* [33m6f9ac3a[m WIP
* [33m8b855c0[m WIP
* [33m93d009a[m X1
* [33m6cbd0a5[m MIDDLE
* [33m0b19b2b[m Memobj
* [33mfc6ac00[m middle
* [33m15ac10f[m recursion
* [33m6ab85ee[m while ok
* [33mfe44c84[m lemma management OK
* [33m0c3f655[m Before: attenuate Auto-Construct
* [33m5d507d3[m stack-reversed-now
* [33mf67d45d[m before:left-associative-stack
* [33m617d757[m Register mechanism
* [33m5a0bb90[m WIP
* [33m5163a43[m WIP
* [33mf8b193e[m DAS
* [33m25e75cb[m DAS
* [33m37e2abc[m nu-choose
* [33mbb52b30[m WIP
* [33m9b28b58[m WIP
* [33mf97b158[m WIP
* [33m41c58cb[m WIP
* [33m70b5fca[m DA
* [33m5f740c0[m DAS
* [33m12a7a75[m M1
* [33mf70e4e3[m DAS
